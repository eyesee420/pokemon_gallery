import Head from 'next/head';
import { useState } from 'react';
import { Inter } from 'next/font/google';
import styles from '@/styles/Home.module.css';
import { SimpleGrid, Box, Image, Center,
   Heading, Input, Button, Modal, ModalOverlay,
    ModalContent, ModalHeader, ModalBody, ModalCloseButton,
    Text } from '@chakra-ui/react';

export async function getStaticProps() {
  const limit = 100;
  const response = await fetch(`https://pokeapi.co/api/v2/pokemon/?limit=${limit}`);
  const data = await response.json();


  const pokemonDataPromises = data.results.map(async (pokemon) => {
    const response = await fetch(pokemon.url);
    return await response.json();
  });

  const pokemonData = await Promise.all(pokemonDataPromises);

  return {
    props: {
      pokemonData,
    },
  };
}

export default function Home({ pokemonData }) {
  const [searchTerm, setSearchTerm] = useState('');
  const [selectedPokemon, setSelectedPokemon] = useState(null);
  const [isModalOpen, setIsModalOpen] = useState(false);

  const handleSearchChange = (e) => {
    setSearchTerm(e.target.value);
  };

  const handlePokemonClick = (pokemon) => {
    setSelectedPokemon(pokemon);
    setIsModalOpen(true);
  };

  const handleModalClose = () => {
    setSelectedPokemon(null);
    setIsModalOpen(false);
  };

  const filteredPokemonData = pokemonData.filter((pokemon) =>
    pokemon.name.toLowerCase().includes(searchTerm.toLowerCase())
  );
console.log(pokemonData.length);

  return (
    <>

      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Box >
      
  
      <Center>
        <Heading marginTop={10} as="h2" size="xl">
          Pokemon Gallery
        </Heading>
      </Center>

      <Box marginTop={5} p={10}>
        <Center>
          <Input
            maxWidth={500}
            placeholder="Search Pokemon"
            _placeholder={{ opacity: 1, color: 'gray.500' }}
            value={searchTerm}
            onChange={handleSearchChange}
          />
        </Center>
      </Box>
      {/* <Box>
        <Center marginBottom={5}>
          <Text variant='' color='grey.400'>{`total number of pokemon ${pokemonData.length}`}</Text>
        </Center>
      </Box> */}
      {/* className={styles.card_image}  */}
      <Box  paddingRight={10} paddingLeft={10}> 
        <SimpleGrid minChildWidth="200px" spacing={10} >
          {filteredPokemonData.map((pokemon) => (
            <Box key={pokemon.id}  borderWidth='2px' borderRadius='xl' >
              <Center>
                <Box paddingTop={5}>
                <Center>
                    <Image
                      objectFit='cover'
                      src={pokemon.sprites.front_shiny}
                      alt=""
                      onClick={() => handlePokemonClick(pokemon)}
                    />
                 </Center>
                </Box>
              </Center>
              <Center paddingBottom={5}>
                <p>{pokemon.name}</p>
              </Center>
              </Box>
          ))}
        </SimpleGrid>
      </Box>

      <Modal  isOpen={isModalOpen} onClose={handleModalClose} >
        <ModalOverlay />
        <ModalContent margin={10}>
      
          <ModalCloseButton />
          <ModalBody>
            {selectedPokemon && (
              <Center>
                <Image src={selectedPokemon.sprites.other["official-artwork"].front_shiny} alt="" />
              </Center>
            )}
          </ModalBody>
      
            <Center>
            {/* {selectedPokemon && selectedPokemon.name} */}

            <Heading as="h4" size="lg" marginBottom={5}>
          {selectedPokemon && selectedPokemon.name}
        </Heading>
            </Center>
  
        </ModalContent>
      </Modal>
      </Box>
    </>
  );
}
